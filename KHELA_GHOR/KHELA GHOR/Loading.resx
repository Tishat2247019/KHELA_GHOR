<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAHyAAAAEAIAAoEAAAFgAAACgAAAAfAAAAQAAAAAEAIAAAAAAAgA8AABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA6vD+AOrw/gDq8P4A6vD+H+rw/k/q8P6D6vD+surw/tbq8P7v6vD+/Orw
        /v7q8P7+6vD+/urw/vzq8P7w6vD+1+rw/rPq8P6E6vD+T+rw/h/q8P4A6vD+AOrw/gAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA6vD+AOrw/gDq8P4e6vD+gOrw/tTq8P706vD+/urw/v/q8P7/6vD+/+rw
        /v7q8P7+6vD+/urw/v7q8P7+6vD+/+rw/v/q8P7/6vD+/urw/vTq8P7V6vD+gurw/h/q8P4A6vD+AAAA
        AAAAAAAAAAAAAAAAAAAAAAAA6vD+AOrw/gHq8P5J6vD+zerw/v/q8P7/6vD+/+rw/v7q8P7+6vD+/urw
        /v7q8P7+6vD+/urw/v7q8P7+6vD+/urw/v7q8P7+6vD+/urw/v7q8P7/6vD+/+rw/v/q8P7O6vD+Surw
        /gHq8P4AAAAAAAAAAAAAAAAA6vD+AOrw/gHq8P5a7fP/6O70///u9P/+7vT//u70//7u9P/+7vT//u70
        //7u9P/+7vT//u70//7u9P/+7vT//u70//7u9P/+7vT//u70//7u9P/+7vT//u70//7u9P/+7vT//+70
        /+jx9/9a7vT/AfT5/wAAAAAAAAAAAOrw/gDq8P5E6vD+58HG0v+fo63+nqKr/p6iq/6eoqv+nqKr/p6i
        q/6eoqv+nqKr/p6iq/6eoqv+nqKr/p6iq/6eoqv+nqKr/p6iq/6eoqv+nqKr/p6iq/6eoqv+nqKr/p6i
        q/6fo63/ub7J5unv/ETl7P8AAAAAAOrw/gDq8P4Z6vD+yOrw/v9bXWP/Njc6/2Vobf9kZ23/ZGdt/2Vn
        bv9lZm7/ZWdu/2Rnbf9kZ23/ZGdt/2Zobv9kZ23/Y2Vr/2Rnbf9kZ23/ZGdt/2Rnbf9kZ23/ZGdt/2Rn
        bf9laG3/S01S/1VYXf/m7PrH7PL/GOrw/gDq8P4B6vD+durw/v3q8P7+V1le/4eLk/7v9f/+6/H//uvx
        //7N3Nr+pMeh/8LXyv7s8f/+7fL//uvx//7U2ub+r7O+/sXJ1f7t8//+6/H//uzz//7t8/7+7fP//u3y
        //7r8f/+7vT//rq/yv5ZXGH/5uz6/erw/nTq8P4B6vD+GOrw/s7q8P7/6vD+/ldZXv+IjJT+7vT//uzx
        //7P4OX+ebOH/3SrZf+Mu4D/wdTL/rXQuf7T3eP+kJOc/1pibv+xt8X+7vL//uzy/v6zt+/+dHfq/7K9
        3P7DzuH+6/H+/u3z//66v8r+Wlxi/+bs+v/q8P7N6vD+GOrw/kbq8P7x6vD+/+rw/v5XWV7/iIyU/u70
        //7r8P7+3+nz/pfItP5psHv/gKt5/4C0cP93smP/ocCh/5yjr/5jZnT/o7fD/pzs8f7i8vz+hYfr/x4e
        7P9OZJ3/g5my/+3z//7t8//+ur/K/lpcYv/m7Pr/6vD+8urw/kfq8P546vD+/erw/v7q8P7+V1le/4iM
        lP7u9P/+7PH//tHj5/5ryZL/aryO/221gv+JsIP/grZz/8XXz/7c4vD+tcTN/oDZ3P4749//0e75/pSj
        w/5ab6P/Kkty/4GXsf/t8//+7fP//rq/yv5aXGL/5uz6/urw/v3q8P556vD+qOrw/v/q8P7+6vD+/ldZ
        Xv+IjJT+7vT//uvx//7Z5u7+fsuh/3XKmv+/3tb+msKm/3qwd//O29f+ye75/lTm5f9F5OD/POTf/7PT
        4/4xUXX/dYyn/zZWev+AlrD/7fP//u3z//66v8r+Wlxi/+bs+v7q8P7/6vD+p+rw/s7q8P7/6vD+/urw
        /v5XWV7/iIyU/u70//7q8P7+6vD+/uDq9P7U3+/+rq/r/p6t1v5qtYL/g62I/3Xg4/864t7/e+fq/j7k
        3/+w0eH+NFN3/ytNcv8fQmn/gpex/+3z//7t8//+ur/K/lpcYv/m7Pr+6vD+/+rw/szq8P7o6vD+/+rw
        /v7q8P7+Vlhd/4iLk/7u9P/+6vD+/urw/v7q7/7+kpLi/0xIy/9IRMr/vMzg/rvI0f5x3uL/N+Ld/2vm
        5/894t7/0u76/rTA1f40VXn/DDJb/4WatP/u9P/+7vT//rvAy/5aXGL/5uz6/urw/v/q8P7n6vD++erw
        /v7q8P7+6vD+/qmtt/6/xdD+7PL//uzy//7t8//+2+D5/lRQzv+Sk+L+p6np/uXp/f7n8//+Yefn/5Xp
        7/6Z6e/+POPf/8Le7P6jssn+epCs/09sjP+vvNL+3eLx/t/k8v7HzNv+naGu/ubs+v7q8P7+6vD++erw
        /v7q8P7+6vD+/urw/v7s8v/+7PL//unv/f7E1PD+wNHw/tHW9f5EP8n/o6Tn/vD3//7u8//+z9zZ/nHI
        sP+E5+r+iurt/ozp7f/i7fv+4Oj3/tzj9f6QkeD/fXym/1RTb/9mbLT/XF+H/21xj//Y3u3+6/H//urw
        /v7q8P7+6vD+/urw/v7q8P7+6vD+/uvx//7Z4/T+SonU/zd93v+0vun+Qj3I/6Ok5/7r8vz+zNnR/n6e
        Zv5dhDX/2eft/tbf7P7m6/n+6vD9/ouOlv+bnrf/TEjP/3Fwrv9KR1v/eX63/rK41v7T2er+6O78/urw
        /v7q8P7+6vD+/urw/v7q8P7+7fP//uvx//7r8P7+4un4/n6s3f93p+H/wcjv/kE8x/+oqev+usy2/lZ/
        LP9ZgjL/WoQx/6Cnqf4wMTT/d3qB/7e8x/4jJCX/cHKK/0tHz/+SlNb+lJWd/pqboP6jo6n+2t/r/uzy
        //7q8P7+6vD+/urw/v7q8P7+5ev5/rm9yP7c4u/+7PL//u3z//7L0Nz+qq63/rm83v5CPcn/p6nm/neZ
        V/9Ufin/gaBp/1qDMf9WXFr/AAAA/ykqLP86Oz//BgYG/3R2jv5KRs7/p6nq/sDDyv6tr7f+paat/s3R
        3f7a4O3+6vD+/urw/v7q8P756/H//uLo9P5XWV7/WVth/83S3v6prbf+VFZb/1FTVf+mqcn+RD/K/6So
        3/5wlU7/PWwK/015IP9chTT/dXt7/xkaG/89P0L/LC0w/w8QEP9zdY3+SkbO/6Wn6P7u9P/+7vT//tHW
        4/5KTFD/dnqB/+zy//7q8P746vD+6Orw/v/r8f/+0NXh/klLUP9JS0//qq+5/qKltv6hpb7+tbjl/kVA
        y/+YocT+e51d/4+qff55ml3/XIU1/87W3P5/gor/ZGds/6Onsf4mKCn/cXOL/0pGzv+qrer+8Pb//s/V
        4P5CQ0f/LC4w/77Dzv7s8v//6vD+5urw/s7q8P7/6vD+/uzy//7U2eX+Tk9U/1BTVv+3ut7+pKXp/q2v
        6v6houj+xc/Z/mGIO/+XsYn/x9XL/rDErP7g5vL+2d7r/tjd6v7GzNf+ISEj/4WImP6kpen+2t/6/tHW
        4f5BQkb/MDI1/8HG0f7t8//+6vD+/+rw/szq8P6o6vD+/+rw/v7q8P7+7PL//tfc6P5RU1j/SEpO/9HW
        4v7t8//+7PL//urw/v7X4uP+4Oju/uju/f7s8f/+v8LN/picpv6doKn+mJyl/n2AiP/P1OD+8Pf//tDW
        4f5CQ0f/NDY5/8TJ1P7t8//+6vD+/urw/v/q8P6p6vD+eOrw/v3q8P7+6vD+/urw/v7s8v/+2d/r/lZY
        Xf9DRUn/zdLe/u3z//7q8P7+7PH//rvX6/5rqs//gLXa/5C+4/5uqdX/ncTn/+bt+/7t8//+7vT//s7U
        3/5AQkb/ODo9/8fN2P7t8//+6vD+/urw/v7q8P7+6vD+f+rw/kbq8P7x6vD+/+rw/v7q8P7+6vD+/uzy
        //7b4e3+W11j/z9ARP/Jztn+7fP//ubt+v5swt//KWl//zGQsv8xlMv/M3Ca/0CDwf/N3vL+7vT//s7T
        3v4/QUX/PD5B/8rQ2/7t8//+6vD+/urw/v7q8P7/6vD+8urw/krq8P4Y6vD+zurw/v/q8P7+6vD+/urw
        /v7q8P7+7PL//t7j8P5gYmj/Ojw//8XK1f7s8f7+icvl/zqYtv87ttv/PMDs/z+btv9coMb/2+b3/s7T
        3v4+QEP/QEJG/87T3v7t8//+6vD+/urw/v7q8P7+6vD+/+rw/szq8P4X6vD+Aerw/nbq8P796vD+/urw
        /v7q8P7+6vD+/urw/v7s8v/+4OXy/mVobf82ODv/wcXQ/uLs+v602+7+j7zR/oSyx/6w2u7+1Of2/szR
        3P49P0L/REZK/9DW4f7s8//+6vD+/urw/v7q8P7+6vD+/urw/v7q8P576vD+Aerw/gDq8P4Z6vD+yOrw
        /v/q8P7+6vD+/urw/v7q8P7+6vD+/uzy//7i5/P+am1z/zM0N/+9ws3+3+Lu/piUnP6vrbb+3+Ht/s3R
        3f48PkH/SUtP/9PY5P7s8v/+6vD+/urw/v7q8P7+6vD+/urw/v/q8P7M6vD+Herw/gAAAAAA6vD+AOrw
        /kXq8P7n6vD+/+rw/v7q8P7+6vD+/urw/v7q8P7+6/H//uPp9f5vcnn/MDE0/7S4w/7P0t7+n56n/qqs
        tf4+QEP/TU9U/9bb5/7s8v/+6vD+/urw/v7q8P7+6vD+/urw/v/q8P7n6vD+Rurw/gAAAAAAAAAAAOrw
        /gDq8P4B6vD+Wurw/ujq8P7/6vD+/urw/v7q8P7+6vD+/urw/v7r8f/+5er3/nV4f/8tLjH/rrK8/r/D
        zv4+QEP/UlRZ/9jd6f7s8v/+6vD+/urw/v7q8P7+6vD+/urw/v/q8P7n6vD+Werw/gHq8P4AAAAAAAAA
        AAAAAAAA6vD+AOrw/gHq8P5J6vD+zerw/v/q8P7/6vD+/+rw/v7q8P7+6vD+/uvx//7m7Pj+en6F/ico
        Kv8sLTD/WFpf/9rf7P7s8v/+6vD+/urw/v7q8P7/6vD+/+rw/v/q8P7M6vD+SOrw/gHq8P4AAAAAAAAA
        AAAAAAAAAAAAAAAAAADq8P4A6vD+AOrw/h7q8P6A6vD+1Orw/vTq8P7+6vD+/+rw/v/q8P7/6/H//uft
        +v6Dh4/+Z2pw/9vh7v7s8v//6vD+/+rw/v/q8P7+6vD+9Orw/tTq8P5/6vD+Hurw/gDq8P4AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOrw/gDq8P4A6vD+AOrw/h/q8P5P6vD+g+rw/rLq8P7W6vD+7+rw
        /vzr8f/+6e/9/uft+/7r8f/86vD+7+rw/tfq8P6z6vD+hOrw/lDq8P4f6vD+AOrw/gDq8P4AAAAAAAAA
        AAAAAAAAAAAAAP4AAP74AAA+4AAADsAAAAbAAAAGgAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAsAA
        AAbAAAAG4AAADvgAAD7+AAD+
</value>
  </data>
</root>